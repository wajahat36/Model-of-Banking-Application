# include<iostream>
# include<fstream>
#include<sstream>
#include<string>
#include<stdlib.h>
using namespace std;
class bank
{public:
static int num,amountwithdrawn,ad,x,searchnumber;
static string  s,number,name,balance,del,amount,upbalance;     
string t,prev1,prev2,prev3,line,total,sum,next;

void display(){
   cout<<"select one option"<<endl;
   //cout<<"if you are choosing an option for the 1st time Note:Make sure to delete all accounts (select option(6)) before you select any option,we will get back to you with an improvised version asap."<<endl;
   cout<<"1.open an account"<<endl;
   cout<<"2.balance enquiry"<<endl;
   cout<<"3.withdraw"<<endl;
   cout<<"4.deposit"<<endl;
   cout<<"5.display all accounts"<<endl;
   cout<<"6.delete all accounts"<<endl;
   cout<<"7.quit"<<endl;
   cout<<"enter your choice"<<endl;
   cin>>x;
   cout<<"your selected value is "<<x<<endl;
   prev1.erase();
   prev2.erase();
   prev3.erase();
   line.erase();
   total.erase();
   sum.erase();
   next.erase();
   input(x);
   

}
int input(int y){
switch(y){
  case 1:
  openacc();
  break;
case 2:be();
break;
case 3:with();
break;
case 4:deposit();
break;
case 5:show();
break;
case 6:delacc();
exit(1);
break;
case 7:
cout<<"thank you"<<endl;
break;
 default:
cout<<"no input given"<<endl;
//exit(1);
}
return 0;
}
void openacc(){
  numup();
  //storewrite();
  congoread();
  display();

};
void be(){
  search();
  display();

};
void with(){
  searchwithdraw();
  updatel();
  updater();
  add();
  writenew();
  
 // calculate();//arithmetic as well//
display();
};
void deposit(){
  searchdeposit();
  updatel();
  updater();
  add();
  writenew();
  //calculatedeposit();
display();  
};
void show(){
  showall();//print all details using a loop//
  display();
};
void delacc(){
  remove();//print the new contents 
//display();
}

void storewrite(int numnew){
  numnew=numnew+1;
  //cout<<"check me"<<numnew<<endl;
  number=to_string(numnew);
  cout<<"enter name"<<endl;
  cin>>s;
  cout<<"enter amount"<<endl;
  cin>>amount;
  ofstream ofs("data.txt",ios::app);
ofs<<s<<",";
ofs<<amount<<",";
ofs<<number<<endl;
}
void congoread(){
  cout<<"your account is created "<<endl;
  cout<<"your name is "<<s<<endl;
  cout<<"your account number is"<<number<<endl;
  cout<<"your amount is"<<amount<<endl;
}

void searchwithdraw(){
  cout<<"enter you account number"<<endl;
  cin>>searchnumber;
  ifstream ifs("data.txt");
while(!ifs.eof())
{
  getline(ifs,name,',');
  getline(ifs,balance,',');
  getline(ifs,number);
  int tempz=stoi(number);
  if(tempz==searchnumber)
  {
  cout<<name<<endl;
  //cout<<number<<endl;
  cout<<balance<<endl;
  break;}
  
} 
//void calculate(){
  //cout<<balance<<endl;
  cout<<"withdraw amount"<<endl;
  cin>>amountwithdrawn;
  int tempy=stoi(balance);
tempy=tempy-amountwithdrawn;
upbalance=to_string(tempy);
cout<<"current balance"<<" "<<upbalance<<endl;
}
void searchdeposit(){
  cout<<"enter you account number"<<endl;
  cin>>searchnumber;
  ifstream ifs("data.txt");
while(!ifs.eof())
{
  getline(ifs,name,',');
  getline(ifs,balance,',');
  getline(ifs,number);
  int tempz=stoi(number);
  if(tempz==searchnumber)
  {
  cout<<name<<endl;
  //cout<<number<<endl;
  cout<<balance<<endl;
  break;}
  
} 

//void calculatedeposit(){
  cout<<"enter amount to be deposited"<<endl;
  cin>>ad;
  int tempx=stoi(balance);
  tempx=tempx+ad;
  upbalance=to_string(tempx);
  cout<<"current balance"<<" "<<upbalance<<endl;
  
}
void showall(){
    ifstream ifs("data.txt");
while(!ifs.eof())
{
  getline(ifs,name,',');
  getline(ifs,balance,',');
  getline(ifs,number);
  
  cout<<name<<endl;
  cout<<balance<<endl;
  cout<<number<<endl;
}
}
void remove(){
  ofstream ofs("data.txt",ios::trunc);
  cout<<"no accounts left"<<endl;
  }
  void search(){
    
  cout<<"enter you account number"<<endl;
  cin>>searchnumber;
  ifstream ifs("data.txt");
while(!ifs.eof())
{
  getline(ifs,name,',');
  getline(ifs,balance,',');
  getline(ifs,number);
  int tempz=stoi(number);
  if(tempz==searchnumber)
  {
  cout<<name<<endl;
  //cout<<number<<endl;
  cout<<balance<<endl;
  break;}
  
} 
  }
  void updater(){
    //cout<<"enter you account number"<<endl;
  //cin>>newnumber;
  ifstream ifs("data.txt");
while(!ifs.eof())
{
  getline(ifs,name,',');
  getline(ifs,balance,',');
  getline(ifs,number);
  int temp=stoi(number);
  if(temp==searchnumber)
{  while(!ifs.eof())
  {ifs>>next;
  };
}
    
  }
  }
  void updatel(){ifstream ifs("data.txt");
  while(!ifs.eof())
  {
  getline(ifs,prev1,',');
  getline(ifs,prev2,',');
  getline(ifs,prev3);
  if(prev2==balance&&prev3==number)
  {//t=upbalance;
  //upbalance=prev2;
  prev2=prev1+","+upbalance;
total=line+prev2;
  }
  else{
    prev3=prev1+","+prev2+","+prev3;
line=prev3+"\n"+line;
  }
  }

}
void add(){
  sum=total+","+number+"\n"+next;
  //cout<<sum<<endl;
}
void writenew(){
  ofstream ofs("data.txt");
  ofs<<sum;
  ofs.close();
}
void numup(){
  ifstream ifs("data.txt");
  ifs.seekg(0, ios::end);
int spot = ifs.tellg();
if( spot == 0)
  {
    num=0;
    storewrite(num);
  }
  else
  {ifstream ifs("data.txt");
while(!ifs.eof())
{
  getline(ifs,name,',');
  getline(ifs,balance,',');
  getline(ifs,number);
  }
  int num=stoi(number);
  //cout<<"here I am"<<num;
  storewrite(num);
}
//cout<<"outside"<<num<<endl;
//storewrite(num);
}
    
};
int bank :: num;
int bank::amountwithdrawn;
int bank ::ad;
int bank ::x;
int bank ::searchnumber;
string bank :: s;
string bank::number;
string bank::name;
string bank::balance;
string bank::del;
string bank::amount;
string bank::upbalance;
int main()
{
  bank b;
  b.display();
  return 0;
}